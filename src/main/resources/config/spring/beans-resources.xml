<beans xmlns="http://www.springframework.org/schema/beans"   
 		xmlns:sec="http://www.springframework.org/schema/security"  
  	 	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"  
     	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd 
    	http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.2.xsd">

	<bean id="readWriteDataSource" class="com.ahana.api.system.security.common.ManagedDataSource">
		<property name="lookupDBUsernameLabel"><value>database.user</value></property>
		<property name="lookupDBPasswordLabel"><value>database.password</value></property>
		<property name="lookupDBNameLabel"><value>database.name</value></property>
		<property name="lookupDBIpLabel"><value>database.ip</value></property>
		<property name="lookupDBPortLabel"><value>database.port</value></property>

		<property name="defaultReadOnly">
            <value>false</value>
        </property>
       <property name="maxTotal">
			<value>20</value>
		</property>
		<property name="maxIdle">
			<value>3</value>
		</property>
		<property name="minIdle">
			<value>2</value>
		</property>
		<property name="maxWaitMillis">
			<value>10000</value>
		</property>
		<property name="validationQuery">
			<value>select count(*) from seed_container</value>
		</property>
		<property name="testOnBorrow">
			<value>true</value>
		</property>
		<property name="testOnReturn">
			<value>false</value>
		</property>
		<property name="testWhileIdle">
			<value>true</value>
		</property>
		<property name="driverClassName">
			<value>org.postgresql.Driver</value>
		</property>
		<property name="removeAbandonedTimeout">
			<value>60</value>
		</property>
		<property name="logAbandoned">
			<value>true</value>
		</property>
		<property name="username">
			<value></value>
		</property>
		<property name="password">
			<value></value>
		</property>
		<property name="url">
			<value>
				jdbc:postgresql://databaseIP:databasePort/databaseName?defaultAutoCommit=false
			</value>
		</property>
	</bean>
	
	<bean id="readOnlyDataSource" class="com.ahana.api.system.security.common.ManagedDataSource">
		<property name="lookupDBUsernameLabel"><value>database.readonly.user</value></property>
		<property name="lookupDBPasswordLabel"><value>database.readonly.password</value></property>
		<property name="lookupDBNameLabel"><value>database.readonly.name</value></property>
		<property name="lookupDBIpLabel"><value>database.readonly.ip</value></property>
		<property name="lookupDBPortLabel"><value>database.readonly.port</value></property>

		<property name="defaultReadOnly">
            <value>false</value>
        </property>
       <property name="maxTotal">
			<value>20</value>
		</property>
		<property name="maxIdle">
			<value>3</value>
		</property>
		<property name="minIdle">
			<value>2</value>
		</property>
		<property name="maxWaitMillis">
			<value>10000</value>
		</property>
		<property name="validationQuery">
			<value>select count(*) from seed_container</value>
		</property>
		<property name="testOnBorrow">
			<value>true</value>
		</property>
		<property name="testOnReturn">
			<value>false</value>
		</property>
		<property name="testWhileIdle">
			<value>true</value>
		</property>
		<property name="driverClassName">
			<value>org.postgresql.Driver</value>
		</property>
		<!-- <property name="removeAbandonedOnMaintenance">
			<value>false</value>
		</property> -->
		<property name="removeAbandonedTimeout">
			<value>60</value>
		</property>
		<property name="logAbandoned">
			<value>true</value>
		</property>
		<property name="username">
			<value></value>
		</property>
		<property name="password">
			<value></value>
		</property>
		<property name="url">
			<value>
				jdbc:postgresql://databaseIP:databasePort/databaseName?defaultAutoCommit=false
			</value>
		</property>
	</bean>
	
	<bean id="sessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
		<property name="dataSource" ref="readWriteDataSource"/>
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">org.hibernate.dialect.PostgreSQLDialect</prop>
				<prop key="hibernate.cache.provider_class">org.hibernate.cache.NoCacheProvider</prop>
				<prop key="hibernate.cache.use_second_level_cache">false</prop>		
     			<prop key="hibernate.jdbc.batch_size">30</prop>
     			<prop key="hibernate.show_sql">false</prop>
            	<prop key="hibernate.format_sql">false</prop>
            	<prop key="hibernate.temp.use_jdbc_metadata_defaults">false</prop>
  			</props>
		</property>
		<property name="annotatedClasses">
			<list>
				<value>com.ahana.api.domain.user.Roles</value>
				<value>com.ahana.api.domain.user.UserProfile</value>
				<value>com.ahana.api.domain.user.UserRole</value>
				<value>com.ahana.api.domain.user.DocFile</value>
			</list>
		</property>
	</bean>
	
	<bean id="readOnlySessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
		<property name="dataSource" ref="readOnlyDataSource"/>
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">org.hibernate.dialect.PostgreSQLDialect</prop>
				<prop key="hibernate.cache.provider_class">org.hibernate.cache.NoCacheProvider</prop>
				<prop key="hibernate.cache.use_second_level_cache">false</prop>			
     			<prop key="hibernate.jdbc.batch_size">30</prop>
     			<prop key="hibernate.show_sql">false</prop>
     			<prop key="hibernate.format_sql">false</prop>
     			<prop key="hibernate.temp.use_jdbc_metadata_defaults">false</prop>
  			</props>
		</property>
		<property name="annotatedClasses">
			<list>
				<value>com.ahana.api.domain.user.Roles</value>
				<value>com.ahana.api.domain.user.UserProfile</value>
				<value>com.ahana.api.domain.user.UserRole</value>
				<value>com.ahana.api.domain.user.DocFile</value>	
				<value>com.ahana.api.domain.common.AhanaLookupVO</value>
				<value>com.ahana.api.domain.common.LookupPK</value>	
			</list>
		</property>
	</bean>
	
	<bean id="transactionManager" class="org.springframework.orm.hibernate4.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory"/>
	</bean>

	<bean id="txProxyTemplate" abstract="true" class="org.springframework.transaction.interceptor.TransactionProxyFactoryBean">
		<property name="transactionManager" ref="transactionManager"/>
		<property name="transactionAttributeSource">
			<bean class="org.springframework.transaction.annotation.AnnotationTransactionAttributeSource" />
		</property>
	</bean>
	
	<bean id="managerProxy" abstract="true"	class="org.springframework.transaction.interceptor.TransactionProxyFactoryBean">
		<property name="transactionManager" ref="transactionManager"/>
		<property name="transactionAttributeSource">
			<bean class="org.springframework.transaction.annotation.AnnotationTransactionAttributeSource" />
		</property>
	</bean>

</beans>